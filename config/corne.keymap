/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        numbs_arrows_layer {
            bindings = <
&kp TAB           &trans  &kp HOME  &kp UP        &kp END    &kp PAGE_UP      &trans     &kp N7        &kp N8         &kp N9        &trans  &kp BACKSPACE
&kp LEFT_SHIFT    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp DOT    &kp NUMBER_4  &kp N5         &kp N6        &trans  &trans
&kp LEFT_CONTROL  &trans  &trans    &trans        &trans     &trans           &kp N0     &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &trans  &kp LEFT_ALT
                                    &kp LEFT_GUI  &trans     &kp SPACE        &kp ENTER  &mo 3         &kp RIGHT_ALT
            >;
        };

        symbols_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp DOUBLE_QUOTES  &kp HASH       &kp DLLR       &kp PRCNT           &kp AMPERSAND  &kp SLASH    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp BSPC
&kp LCTRL  &trans    &kp GRAVE          &trans         &kp CARET      &kp TILDE           &kp MINUS      &kp EQUAL    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp NUHS   &kp GRAVE
&kp LSHFT  &trans    &trans             &kp BACKSLASH  &kp LESS_THAN  &kp GREATER_THAN    &kp UNDER      &kp AT_SIGN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE   &kp LEFT_ALT
                                        &kp LGUI       &mo 3          &kp SPACE           &kp RET        &trans       &kp RALT
            >;
        };

        special_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7   &kp F8             &kp F9           &kp F10           &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans   &kp K_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &trans   &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans   &trans             &trans           &trans            &trans   &kp K_POWER
                                        &kp LGUI      &trans        &kp SPACE       &kp RET  &trans             &kp RALT
            >;
        };
    };
};
